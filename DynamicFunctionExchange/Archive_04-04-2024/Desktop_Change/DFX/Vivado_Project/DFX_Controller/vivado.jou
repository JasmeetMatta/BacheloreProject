#-----------------------------------------------------------
# Vivado v2023.1 (64-bit)
# SW Build 3865809 on Sun May  7 15:05:29 MDT 2023
# IP Build 3864474 on Sun May  7 20:36:21 MDT 2023
# SharedData Build 3865790 on Sun May 07 13:33:03 MDT 2023
# Start of session at: Wed Apr  3 01:16:36 2024
# Process ID: 9136
# Current directory: C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent2428 C:\Users\jasme\Desktop\DFX\Vivado_Project\DFX_Controller\DFX_Controller.xpr
# Log file: C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/vivado.log
# Journal file: C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller\vivado.jou
# Running On: Jasmeet, OS: Windows, CPU Frequency: 2592 MHz, CPU Physical cores: 6, Host memory: 16990 MB
#-----------------------------------------------------------
start_gui
open_project C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.xpr
update_compile_order -fileset sources_1
open_bd_design {C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd}
synth_design -rtl -rtl_skip_mlo -name rtl_1
open_bd_design {C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd}
open_bd_design {C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd}
reset_run synth_1
launch_runs synth_1 -jobs 6
wait_on_run synth_1
reset_run synth_1
startgroup
delete_bd_objs [get_bd_intf_nets Led_AXI_AttemptInfi_0_M_AXI] [get_bd_intf_nets microblaze_0_intc_axi] [get_bd_intf_nets microblaze_0_ilmb_1] [get_bd_intf_nets microblaze_0_axi_dp] [get_bd_intf_nets microblaze_0_debug] [get_bd_intf_nets microblaze_0_axi_periph_M01_AXI] [get_bd_intf_nets microblaze_0_dlmb_1] [get_bd_intf_nets microblaze_0_axi_periph_M02_AXI] [get_bd_intf_nets axi_uartlite_0_UART] [get_bd_intf_nets axi_gpio_0_GPIO] [get_bd_intf_nets microblaze_0_interrupt]
delete_bd_objs [get_bd_nets microblaze_0_intr] [get_bd_nets Led_AXI_AttemptInfi_0_Led_Output] [get_bd_nets rst_clk_wiz_1_100M_bus_struct_reset] [get_bd_nets reset_1] [get_bd_nets rst_clk_wiz_1_100M_peripheral_aresetn] [get_bd_nets clk_wiz_1_locked] [get_bd_nets clk_wiz_1_clk_out1] [get_bd_nets rst_clk_wiz_1_100M_mb_reset] [get_bd_nets sys_clock_1] [get_bd_nets mdm_1_debug_sys_rst]
delete_bd_objs [get_bd_intf_ports push_buttons_5bits] [get_bd_intf_ports usb_uart]
delete_bd_objs [get_bd_cells clk_wiz_1] [get_bd_cells Led_AXI_AttemptInfi_0] [get_bd_cells microblaze_0_axi_intc] [get_bd_cells mdm_1] [get_bd_cells microblaze_0] [get_bd_cells microblaze_0_xlconcat] [get_bd_cells axi_gpio_0] [get_bd_cells axi_uartlite_0] [get_bd_cells rst_clk_wiz_1_100M]
delete_bd_objs [get_bd_ports reset] [get_bd_ports sys_clock] [get_bd_ports Led_Output_0]
delete_bd_objs [get_bd_cells microblaze_0_axi_periph] [get_bd_cells microblaze_0_local_memory]
endgroup
validate_bd_design
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:microblaze -config { axi_intc {1} axi_periph {Enabled} cache {None} clk {New Clocking Wizard} cores {1} debug_module {Debug Only} ecc {None} local_mem {64KB} preset {None}}  [get_bd_cells microblaze_0]
startgroup
set_property -dict [list \
  CONFIG.CLK_IN1_BOARD_INTERFACE {sys_clock} \
  CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} \
  CONFIG.RESET_PORT {resetn} \
  CONFIG.RESET_TYPE {ACTIVE_LOW} \
] [get_bd_cells clk_wiz_1]
endgroup
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {sys_clock ( System Clock ) } Manual_Source {Auto}}  [get_bd_pins clk_wiz_1/clk_in1]
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {reset ( Reset ) } Manual_Source {New External Port (ACTIVE_LOW)}}  [get_bd_pins clk_wiz_1/resetn]
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {reset ( Reset ) } Manual_Source {Auto}}  [get_bd_pins rst_clk_wiz_1_100M/ext_reset_in]
endgroup
startgroup
delete_bd_objs [get_bd_intf_nets microblaze_0_intc_axi] [get_bd_intf_nets microblaze_0_ilmb_1] [get_bd_intf_nets microblaze_0_axi_dp] [get_bd_intf_nets microblaze_0_debug] [get_bd_intf_nets microblaze_0_dlmb_1] [get_bd_intf_nets microblaze_0_interrupt]
delete_bd_objs [get_bd_nets microblaze_0_Clk] [get_bd_nets microblaze_0_intr] [get_bd_nets rst_clk_wiz_1_100M_bus_struct_reset] [get_bd_nets reset_1] [get_bd_nets clk_wiz_1_locked] [get_bd_nets rst_clk_wiz_1_100M_peripheral_aresetn] [get_bd_nets rst_clk_wiz_1_100M_mb_reset] [get_bd_nets mdm_1_debug_sys_rst] [get_bd_nets sys_clock_1]
delete_bd_objs [get_bd_cells clk_wiz_1] [get_bd_cells mdm_1] [get_bd_cells microblaze_0_axi_intc] [get_bd_cells microblaze_0_xlconcat] [get_bd_cells microblaze_0] [get_bd_cells rst_clk_wiz_1_100M]
delete_bd_objs [get_bd_ports reset] [get_bd_ports sys_clock]
delete_bd_objs [get_bd_cells microblaze_0_axi_periph] [get_bd_cells microblaze_0_local_memory]
endgroup
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:microblaze -config { axi_intc {1} axi_periph {Enabled} cache {None} clk {New Clocking Wizard} cores {1} debug_module {Debug Only} ecc {None} local_mem {128KB} preset {None}}  [get_bd_cells microblaze_0]
startgroup
set_property -dict [list \
  CONFIG.CLK_IN1_BOARD_INTERFACE {sys_clock} \
  CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} \
  CONFIG.RESET_PORT {resetn} \
  CONFIG.RESET_TYPE {ACTIVE_LOW} \
] [get_bd_cells clk_wiz_1]
endgroup
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {sys_clock ( System Clock ) } Manual_Source {Auto}}  [get_bd_pins clk_wiz_1/clk_in1]
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {reset ( Reset ) } Manual_Source {New External Port (ACTIVE_LOW)}}  [get_bd_pins clk_wiz_1/resetn]
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {reset ( Reset ) } Manual_Source {Auto}}  [get_bd_pins rst_clk_wiz_1_100M/ext_reset_in]
endgroup
startgroup
set_property CONFIG.NUM_PORTS {1} [get_bd_cells microblaze_0_xlconcat]
endgroup
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0
endgroup
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/clk_wiz_1/clk_out1 (100 MHz)} Clk_slave {Auto} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/microblaze_0 (Periph)} Slave {/axi_uartlite_0/S_AXI} ddr_seg {Auto} intc_ip {/microblaze_0_axi_periph} master_apm {0}}  [get_bd_intf_pins axi_uartlite_0/S_AXI]
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {usb_uart ( USB UART ) } Manual_Source {Auto}}  [get_bd_intf_pins axi_uartlite_0/UART]
endgroup
connect_bd_net [get_bd_pins microblaze_0_xlconcat/In0] [get_bd_pins axi_uartlite_0/interrupt]
regenerate_bd_layout
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0
endgroup
set_property CONFIG.GPIO_BOARD_INTERFACE {push_buttons_5bits} [get_bd_cells axi_gpio_0]
startgroup
apply_bd_automation -rule xilinx.com:bd_rule:board -config { Board_Interface {push_buttons_5bits ( 5 Push Buttons ) } Manual_Source {Auto}}  [get_bd_intf_pins axi_gpio_0/GPIO]
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/clk_wiz_1/clk_out1 (100 MHz)} Clk_slave {Auto} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/microblaze_0 (Periph)} Slave {/axi_gpio_0/S_AXI} ddr_seg {Auto} intc_ip {/microblaze_0_axi_periph} master_apm {0}}  [get_bd_intf_pins axi_gpio_0/S_AXI]
endgroup
startgroup
create_bd_cell -type ip -vlnv xilinx.com:user:Led_AXI_AttemptInfi:1.0 Led_AXI_AttemptInfi_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {Auto} Clk_slave {/clk_wiz_1/clk_out1 (100 MHz)} Clk_xbar {/clk_wiz_1/clk_out1 (100 MHz)} Master {/Led_AXI_AttemptInfi_0/M_AXI} Slave {/microblaze_0_axi_intc/s_axi} ddr_seg {Auto} intc_ip {/microblaze_0_axi_periph} master_apm {0}}  [get_bd_intf_pins Led_AXI_AttemptInfi_0/M_AXI]
regenerate_bd_layout
startgroup
make_bd_pins_external  [get_bd_pins Led_AXI_AttemptInfi_0/Led_Output]
endgroup
regenerate_bd_layout
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip [get_ips  design_1_Led_AXI_AttemptInfi_0_1] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips design_1_Led_AXI_AttemptInfi_0_1] -no_script -sync -force -quiet
generate_target all [get_files  C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd]
catch { config_ip_cache -export [get_ips -all design_1_Led_AXI_AttemptInfi_0_1] }
catch { config_ip_cache -export [get_ips -all design_1_microblaze_0_2] }
catch { config_ip_cache -export [get_ips -all design_1_dlmb_v10_2] }
catch { config_ip_cache -export [get_ips -all design_1_ilmb_v10_2] }
catch { config_ip_cache -export [get_ips -all design_1_dlmb_bram_if_cntlr_2] }
catch { config_ip_cache -export [get_ips -all design_1_ilmb_bram_if_cntlr_2] }
catch { config_ip_cache -export [get_ips -all design_1_lmb_bram_2] }
catch { config_ip_cache -export [get_ips -all design_1_xbar_1] }
catch { config_ip_cache -export [get_ips -all design_1_microblaze_0_axi_intc_2] }
catch { config_ip_cache -export [get_ips -all design_1_mdm_1_2] }
catch { config_ip_cache -export [get_ips -all design_1_clk_wiz_1_2] }
catch { config_ip_cache -export [get_ips -all design_1_rst_clk_wiz_1_100M_2] }
catch { config_ip_cache -export [get_ips -all design_1_axi_uartlite_0_1] }
catch { config_ip_cache -export [get_ips -all design_1_axi_gpio_0_1] }
export_ip_user_files -of_objects [get_files C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd] -no_script -sync -force -quiet
export_simulation -of_objects [get_files C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd] -directory C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.ip_user_files -ipstatic_source_dir C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/modelsim} {questa=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/questa} {riviera=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/riviera} {activehdl=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
report_ip_status -name ip_status 
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
upgrade_ip -vlnv xilinx.com:user:Led_AXI_AttemptInfi:1.0 [get_ips  design_1_Led_AXI_AttemptInfi_0_1] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips design_1_Led_AXI_AttemptInfi_0_1] -no_script -sync -force -quiet
generate_target all [get_files  C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd]
catch { config_ip_cache -export [get_ips -all design_1_Led_AXI_AttemptInfi_0_1] }
catch { config_ip_cache -export [get_ips -all design_1_microblaze_0_2] }
catch { config_ip_cache -export [get_ips -all design_1_dlmb_v10_2] }
catch { config_ip_cache -export [get_ips -all design_1_ilmb_v10_2] }
catch { config_ip_cache -export [get_ips -all design_1_dlmb_bram_if_cntlr_2] }
catch { config_ip_cache -export [get_ips -all design_1_ilmb_bram_if_cntlr_2] }
catch { config_ip_cache -export [get_ips -all design_1_lmb_bram_2] }
catch { config_ip_cache -export [get_ips -all design_1_xbar_1] }
catch { config_ip_cache -export [get_ips -all design_1_microblaze_0_axi_intc_2] }
catch { config_ip_cache -export [get_ips -all design_1_mdm_1_2] }
catch { config_ip_cache -export [get_ips -all design_1_clk_wiz_1_2] }
catch { config_ip_cache -export [get_ips -all design_1_rst_clk_wiz_1_100M_2] }
catch { config_ip_cache -export [get_ips -all design_1_axi_uartlite_0_1] }
catch { config_ip_cache -export [get_ips -all design_1_axi_gpio_0_1] }
export_ip_user_files -of_objects [get_files C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd] -no_script -sync -force -quiet
export_simulation -of_objects [get_files C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.srcs/sources_1/bd/design_1/design_1.bd] -directory C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.ip_user_files/sim_scripts -ip_user_files_dir C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.ip_user_files -ipstatic_source_dir C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.ip_user_files/ipstatic -lib_map_path [list {modelsim=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/modelsim} {questa=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/questa} {riviera=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/riviera} {activehdl=C:/Users/jasme/Desktop/DFX/Vivado_Project/DFX_Controller/DFX_Controller.cache/compile_simlib/activehdl}] -use_ip_compiled_libs -force -quiet
report_ip_status -name ip_status 
launch_simulation
source LedControl.tcl
add_force {/LedControl/clk} -radix hex {1 0ns} {0 50000ps} -repeat_every 100000ps
add_force {/LedControl/m_axi_rdata} -radix hex {1 0ns}
run 1 ms
add_force {/LedControl/m_axi_aclk} -radix hex {1 0ns} {0 50000ps} -repeat_every 100000ps
run 1 ms
run 1 ms
run 1 ms
run 1 ms
run 1 ms
run 1 ms
run 1 ms
run 1 ms
run 1 ms
run 1 ms
refresh_design
close_sim
